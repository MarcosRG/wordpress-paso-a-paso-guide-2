# ==================================================
# LITESPEED CACHE
# ==================================================
# BEGIN LSCACHE
# END LSCACHE

# BEGIN NON_LSCACHE
# END NON_LSCACHE

# ==================================================
# WORDPRESS (GENERADO AUTOMÁTICAMENTE)
# ==================================================
# BEGIN WordPress
<IfModule mod_rewrite.c>
	RewriteEngine On
	RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
	RewriteBase /
	RewriteRule ^index\.php$ - [L]
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteCond %{REQUEST_FILENAME} !-d
	RewriteRule . /index.php [L]
</IfModule>
# END WordPress

# ==================================================
# SEGURIDAD GENERAL
# ==================================================

# Proteger wp-config.php
<Files wp-config.php>
	Order allow,deny
	Deny from all
</Files>

# Proteger archivos sensibles
<FilesMatch "\.(htaccess|htpasswd|ini|log|env|sh)$">
	Order allow,deny
	Deny from all
</FilesMatch>

# Bloquear xmlrpc.php
<Files xmlrpc.php>
	Order deny,allow
	Deny from all
</Files>

# Encabezados de seguridad
<IfModule mod_headers.c>
	Header always set X-Content-Type-Options "nosniff"
	Header always set X-Frame-Options "SAMEORIGIN"
	Header always set X-XSS-Protection "1; mode=block"
	Header always set Referrer-Policy "strict-origin-when-cross-origin"
</IfModule>

# Evitar listado de directorios
Options -Indexes

# ==================================================
# CONFIGURACIÓN CORS OPTIMIZADA PARA BUILDER.IO
# ==================================================
<IfModule mod_headers.c>
	# ORÍGENES PERMITIDOS PARA BUILDER.IO (ACTIVOS)
	SetEnvIf Origin "^https://([a-z0-9-]+)\.fly\.dev$" CORS_ALLOW_ORIGIN=$0
	SetEnvIf Origin "^https://builder\.io$" CORS_ALLOW_ORIGIN=$0
	SetEnvIf Origin "^https://([a-z0-9-]+\.)?projects\.builder\.my$" CORS_ALLOW_ORIGIN=$0
	
	# DESARROLLO LOCAL
	SetEnvIf Origin "^http://(localhost|127\.0\.0\.1):[0-9]+$" CORS_ALLOW_ORIGIN=$0
	
	# FUTUROS DEPLOYS EN NETLIFY (COMENTADO)
	# SetEnvIf Origin "^https://.*\.netlify\.app$" CORS_ALLOW_ORIGIN=$0
	# SetEnvIf Origin "^https://.*\.netlify\.com$" CORS_ALLOW_ORIGIN=$0
	# SetEnvIf Origin "^https://(www\.)?bikesul-app\.com$" CORS_ALLOW_ORIGIN=$0

	# APLICAR HEADERS CORS SOLO A ORÍGENES PERMITIDOS
	Header always set Access-Control-Allow-Origin "%{CORS_ALLOW_ORIGIN}e" env=CORS_ALLOW_ORIGIN
	Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" env=CORS_ALLOW_ORIGIN
	Header always set Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-WP-Nonce, X-HTTP-Method-Override" env=CORS_ALLOW_ORIGIN
	Header always set Access-Control-Expose-Headers "X-WP-Total, X-WP-TotalPages, Link" env=CORS_ALLOW_ORIGIN
	Header always set Access-Control-Allow-Credentials "true" env=CORS_ALLOW_ORIGIN
	Header always set Access-Control-Max-Age "3600" env=CORS_ALLOW_ORIGIN

	# MANEJAR PREFLIGHT OPTIONS REQUESTS
	RewriteEngine On
	RewriteCond %{REQUEST_METHOD} OPTIONS
	RewriteCond %{HTTP:Origin} ^https://([a-z0-9-]+)\.fly\.dev$ [OR]
	RewriteCond %{HTTP:Origin} ^https://builder\.io$ [OR]
	RewriteCond %{HTTP:Origin} ^https://([a-z0-9-]+\.)?projects\.builder\.my$ [OR]
	RewriteCond %{HTTP:Origin} ^http://(localhost|127\.0\.0\.1):[0-9]+$
	RewriteRule ^(.*)$ $1 [R=200,L]
</IfModule>

# ==================================================
# CORS ESPECÍFICO PARA WOOCOMMERCE API (REFORZADO)
# ==================================================
<LocationMatch "/wp-json/wc/v3">
	<IfModule mod_headers.c>
		# Solo permitir CORS para orígenes específicos en WooCommerce API
		SetEnvIf Origin "^https://([a-z0-9-]+)\.fly\.dev$" WC_CORS_ALLOW=$0
		SetEnvIf Origin "^https://builder\.io$" WC_CORS_ALLOW=$0
		SetEnvIf Origin "^https://([a-z0-9-]+\.)?projects\.builder\.my$" WC_CORS_ALLOW=$0
		SetEnvIf Origin "^http://(localhost|127\.0\.0\.1):[0-9]+$" WC_CORS_ALLOW=$0
		
		# FUTUROS DEPLOYS EN NETLIFY (COMENTADO)
		# SetEnvIf Origin "^https://.*\.netlify\.app$" WC_CORS_ALLOW=$0
		# SetEnvIf Origin "^https://.*\.netlify\.com$" WC_CORS_ALLOW=$0
		
		Header always set Access-Control-Allow-Origin "%{WC_CORS_ALLOW}e" env=WC_CORS_ALLOW
		Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" env=WC_CORS_ALLOW
		Header always set Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-WP-Nonce" env=WC_CORS_ALLOW
		Header always set Access-Control-Allow-Credentials "true" env=WC_CORS_ALLOW
	</IfModule>
</LocationMatch>

# ==================================================
# OPTIMIZACIÓN PARA CLOUDFLARE
# ==================================================
<IfModule mod_headers.c>
	# Headers optimizados para Cloudflare
	Header always set Cache-Control "public, max-age=31536000, immutable" "expr=%{REQUEST_URI} =~ m#\.(css|js|woff|woff2|ttf|svg|ico)$#"
	Header always set Cache-Control "public, max-age=3600" "expr=%{REQUEST_URI} =~ m#\.(jpg|jpeg|png|gif|webp)$#"
	
	# Evitar caché en API endpoints
	Header always set Cache-Control "no-cache, no-store, must-revalidate" "expr=%{REQUEST_URI} =~ m#^/wp-json/#"
	Header always set Pragma "no-cache" "expr=%{REQUEST_URI} =~ m#^/wp-json/#"
	Header always set Expires "0" "expr=%{REQUEST_URI} =~ m#^/wp-json/#"
</IfModule>

# ==================================================
# CONFIGURACIÓN PHP (GENERADA POR CPANEL)
# ==================================================
<IfModule mime_module>
	AddHandler application/x-httpd-ea-php81 .php .php8 .phtml
</IfModule>

# ==================================================
# CONFIGURACIÓN ADICIONAL PARA BUILDER.IO
# ==================================================
<IfModule mod_headers.c>
	# Headers específicos para mejorar compatibilidad con Builder.io
	Header always set X-Robots-Tag "noindex" "expr=%{REQUEST_URI} =~ m#^/wp-json/#"
	Header always set X-Content-Type-Options "nosniff"
	
	# Permitir embedding en Builder.io (solo para necesidades específicas)
	SetEnvIf Referer "^https://builder\.io" BUILDER_EMBED
	SetEnvIf Referer "^https://([a-z0-9-]+\.)?projects\.builder\.my" BUILDER_EMBED
	Header always set X-Frame-Options "ALLOWALL" env=BUILDER_EMBED
</IfModule>
